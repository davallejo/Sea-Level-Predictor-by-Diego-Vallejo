#test_module.py
#Autor: Diego Armando Vallejo Vinueza

import unittest
import sea_level_predictor
import matplotlib as mpl
import numpy as np


# the test case
class LinePlotTestCase(unittest.TestCase):

  def setUp(self):
    self.ax = sea_level_predictor.draw_plot()

  def test_plot_title(self):
    actual = self.ax.get_title()
    expected = "Rise in Sea Level"
    self.assertEqual(actual, expected,
                     "Expected line plot title to be 'Rise in Sea Level'")

  def test_plot_labels(self):
    actual = self.ax.get_xlabel()
    expected = "Year"
    self.assertEqual(actual, expected,
                     "Expected line plot xlabel to be 'Year'")
    actual = self.ax.get_ylabel()
    expected = "Sea Level (inches)"
    self.assertEqual(actual, expected,
                     "Expected line plot ylabel to be 'Sea Level (inches)'")
    actual = self.ax.get_xticks().tolist()
    expected = [
        1850.0, 1875.0, 1900.0, 1925.0, 1950.0, 1975.0, 2000.0, 2025.0, 2050.0,
        2075.0
    ]
    self.assertEqual(
        actual, expected,
        "Expected x tick labels to be '1850.0, 1875.0, 1900.0, 1925.0, 1950.0, 1975.0, 2000.0, 2025.0, 2050.0, 2075.0'"
    )

  def test_plot_data_points(self):
    actual = self.ax.get_children()[0].get_offsets().data.tolist()
    expected = [[1880.0, 0.0], [1881.0, 0.220472441], [1882.0, -0.440944881],
                [1883.0, -0.232283464], [1884.0, 0.590551181],
                [1885.0, 0.531496062], [1886.0, 0.437007874],
                [1887.0, 0.216535433], [1888.0, 0.299212598],
                [1889.0, 0.362204724], [1890.0, 0.440944881],
                [1891.0, 0.374015748], [1892.0, 0.499999999],
                [1893.0, 0.685039369], [1894.0, 0.303149606],
                [1895.0, 0.767716535], [1896.0, 0.468503937],
                [1897.0, 0.673228346], [1898.0, 1.043307086],
                [1899.0, 1.338582676], [1900.0, 1.125984251],
                [1901.0, 1.110236219], [1902.0, 1.291338581],
                [1903.0, 1.606299211], [1904.0, 1.2007874],
                [1905.0, 0.984251968], [1906.0, 1.251968503],
                [1907.0, 1.196850392], [1908.0, 1.098425196],
                [1909.0, 1.27559055], [1910.0, 1.271653542],
                [1911.0, 1.598425195], [1912.0, 1.476377951],
                [1913.0, 1.547244093], [1914.0, 1.795275589],
                [1915.0, 2.10629921], [1916.0, 2.031496061],
                [1917.0, 1.854330707], [1918.0, 1.791338581],
                [1919.0, 1.854330707], [1920.0, 1.905511809],
                [1921.0, 1.988188974], [1922.0, 1.952755904],
                [1923.0, 1.999999998], [1924.0, 1.712598423],
                [1925.0, 1.791338581], [1926.0, 2.047244092],
                [1927.0, 2.003937006], [1928.0, 1.850393699],
                [1929.0, 1.905511809], [1930.0, 2.062992124],
                [1931.0, 2.047244092], [1932.0, 2.271653541],
                [1933.0, 2.440944879], [1934.0, 2.228346454],
                [1935.0, 2.448818895], [1936.0, 2.295275588],
                [1937.0, 2.519685037], [1938.0, 2.622047241],
                [1939.0, 2.826771651], [1940.0, 2.618110234],
                [1941.0, 3.098425194], [1942.0, 3.098425194],
                [1943.0, 3.098425194], [1944.0, 2.84645669],
                [1945.0, 2.95669291], [1946.0, 3.251968501],
                [1947.0, 3.374015745], [1948.0, 3.562992122],
                [1949.0, 3.51181102], [1950.0, 3.598425193],
                [1951.0, 3.972440941], [1952.0, 3.870078736],
                [1953.0, 4.043307082], [1954.0, 3.929133854],
                [1955.0, 3.964566925], [1956.0, 3.763779524],
                [1957.0, 4.291338578], [1958.0, 4.346456688],
                [1959.0, 4.358267712], [1960.0, 4.503937003],
                [1961.0, 4.748031491], [1962.0, 4.543307082],
                [1963.0, 4.480314956], [1964.0, 4.169291334],
                [1965.0, 4.610236216], [1966.0, 4.397637791],
                [1967.0, 4.452755901], [1968.0, 4.484251964],
                [1969.0, 4.751968499], [1970.0, 4.67716535],
                [1971.0, 4.881889759], [1972.0, 5.240157475],
                [1973.0, 5.003937003], [1974.0, 5.472440939],
                [1975.0, 5.409448813], [1976.0, 5.370078735],
                [1977.0, 5.303149601], [1978.0, 5.555118105],
                [1979.0, 5.362204719], [1980.0, 5.598425191],
                [1981.0, 6.086614167], [1982.0, 5.858267711],
                [1983.0, 6.188976372], [1984.0, 6.153543301],
                [1985.0, 5.74803149], [1986.0, 5.771653537],
                [1987.0, 5.795275585], [1988.0, 5.980314955],
                [1989.0, 6.157480309], [1990.0, 6.232283458],
                [1991.0, 6.334645663], [1992.0, 6.35826771],
                [1993.0, 6.291338576], [1994.0, 6.499999993],
                [1995.0, 6.618110229], [1996.0, 6.787401568],
                [1997.0, 7.066929127], [1998.0, 6.665354324],
                [1999.0, 7.011811016], [2000.0, 7.062992119],
                [2001.0, 7.287401567], [2002.0, 7.381889756],
                [2003.0, 7.759842512], [2004.0, 7.740157472],
                [2005.0, 7.74409448], [2006.0, 7.917322827],
                [2007.0, 7.996062984], [2008.0, 8.350393692],
                [2009.0, 8.586614164], [2010.0, 8.901574794],
                [2011.0, 8.96456692], [2012.0, 9.326771644],
                [2013.0, 8.980314951]]
    np.testing.assert_almost_equal(
        actual, expected, 7, "Expected different data points in scatter plot.")

  def test_plot_lines(self):
    actual = self.ax.get_lines()[0].get_ydata().tolist()
    expected = [
        -0.5421240249263661, -0.4790794409142336, -0.41603485690208686,
        -0.3529902728899543, -0.2899456888778218, -0.22690110486568926,
        -0.16385652085355673, -0.1008119368414242, -0.037767352829277456,
        0.025277231182855076, 0.08832181519498761, 0.15136639920712014,
        0.21441098321925267, 0.2774555672313852, 0.34050015124351773,
        0.4035447352556645, 0.466589319267797, 0.5296339032799295,
        0.5926784872920621, 0.6557230713041946, 0.7187676553163271,
        0.7818122393284739, 0.8448568233406064, 0.9079014073527389,
        0.9709459913648715, 1.033990575377004, 1.0970351593891365,
        1.1600797434012833, 1.2231243274134158, 1.2861689114255483,
        1.3492134954376809, 1.4122580794498134, 1.475302663461946,
        1.5383472474740927, 1.6013918314862252, 1.6644364154983577,
        1.7274809995104903, 1.7905255835226228, 1.8535701675347553,
        1.9166147515468879, 1.9796593355590346, 2.042703919571167,
        2.1057485035832997, 2.168793087595432, 2.2318376716075647,
        2.2948822556196973, 2.357926839631844, 2.4209714236439766,
        2.484016007656109, 2.5470605916682416, 2.610105175680374,
        2.6731497596925067, 2.7361943437046534, 2.799238927716786,
        2.8622835117289185, 2.925328095741051, 2.9883726797531835,
        3.051417263765316, 3.1144618477774486, 3.1775064317895954,
        3.240551015801728, 3.3035955998138604, 3.366640183825993,
        3.4296847678381255, 3.492729351850258, 3.5557739358624048,
        3.6188185198745373, 3.68186310388667, 3.7449076878988024,
        3.807952271910935, 3.8709968559230674, 3.934041439935214,
        3.9970860239473467, 4.060130607959479, 4.123175191971612,
        4.186219775983744, 4.249264359995877, 4.312308944008024,
        4.375353528020156, 4.438398112032289, 4.501442696044421,
        4.564487280056554, 4.627531864068686, 4.690576448080819,
        4.7536210320929655, 4.816665616105098, 4.879710200117231,
        4.942754784129363, 5.005799368141496, 5.068843952153628,
        5.131888536165775, 5.194933120177907, 5.25797770419004,
        5.3210222882021725, 5.384066872214305, 5.4471114562264376,
        5.510156040238584, 5.573200624250717, 5.636245208262849,
        5.699289792274982, 5.762334376287114, 5.825378960299247,
        5.8884235443113795, 5.951468128323526, 6.014512712335659,
        6.077557296347791, 6.140601880359924, 6.203646464372056,
        6.266691048384189, 6.329735632396336, 6.392780216408468,
        6.455824800420601, 6.518869384432733, 6.581913968444866,
        6.644958552456998, 6.708003136469145, 6.771047720481278,
        6.83409230449341, 6.897136888505543, 6.960181472517675,
        7.023226056529822, 7.086270640541955, 7.1493152245540875,
        7.21235980856622, 7.2754043925783525, 7.338448976590485,
        7.401493560602632, 7.4645381446147645, 7.527582728626897,
        7.590627312639029, 7.653671896651176, 7.716716480663308,
        7.779761064675441, 7.842805648687573, 7.905850232699706,
        7.9688948167118385, 8.031939400723985, 8.094983984736117,
        8.15802856874825, 8.221073152760382, 8.284117736772515,
        8.347162320784662, 8.410206904796794, 8.473251488808927,
        8.53629607282106, 8.599340656833192, 8.662385240845339,
        8.725429824857471, 8.788474408869604, 8.851518992881736,
        8.914563576893869, 8.977608160906016, 9.040652744918148,
        9.103697328930281, 9.166741912942413, 9.229786496954546,
        9.292831080966678, 9.355875664978825, 9.418920248990957,
        9.48196483300309, 9.545009417015223, 9.608054001027355,
        9.671098585039502, 9.734143169051634, 9.797187753063767,
        9.860232337075899, 9.923276921088046, 9.986321505100178,
        10.049366089112311, 10.112410673124443, 10.17545525713659,
        10.238499841148723, 10.301544425160855, 10.364589009173002,
        10.427633593185134, 10.490678177197267, 10.5537227612094,
        10.616767345221532, 10.679811929233679, 10.742856513245811,
        10.805901097257944, 10.868945681270076, 10.931990265282223,
        10.995034849294355, 11.058079433306488, 11.121124017318621,
        11.184168601330753, 11.2472131853429, 11.310257769355032,
        11.373302353367165, 11.436346937379297, 11.499391521391444,
        11.562436105403576, 11.625480689415709, 11.688525273427841,
        11.751569857439988, 11.814614441452121, 11.877659025464253,
        11.940703609476386, 12.003748193488533, 12.066792777500665,
        12.129837361512798, 12.19288194552493, 12.255926529537077,
        12.31897111354921, 12.382015697561342, 12.445060281573489,
        12.508104865585621, 12.571149449597754, 12.634194033609886,
        12.697238617622033, 12.760283201634166, 12.823327785646298,
        12.886372369658431, 12.949416953670563, 13.01246153768271,
        13.075506121694843, 13.138550705706975, 13.201595289719122,
        13.264639873731254, 13.327684457743387, 13.390729041755534,
        13.453773625767666, 13.516818209779799, 13.579862793791931,
        13.642907377804078, 13.70595196181621, 13.768996545828343,
        13.832041129840475, 13.895085713852622, 13.958130297864754,
        14.021174881876887, 14.084219465889034, 14.147264049901166,
        14.210308633913299, 14.273353217925431, 14.336397801937578,
        14.39944238594971, 14.462486969961843, 14.52553155397399,
        14.588576137986122, 14.651620721998255, 14.714665306010387,
        14.777709890022534, 14.840754474034666, 14.903799058046799,
        14.966843642058931, 15.029888226071078, 15.09293281008321,
        15.155977394095343, 15.219021978107475, 15.282066562119622,
        15.345111146131755, 15.408155730143887, 15.471200314156034,
        15.534244898168166, 15.597289482180299, 15.660334066192446,
        15.723378650204578, 15.786423234216711, 15.849467818228843,
        15.91251240224099, 15.975556986253122, 16.038601570265255,
        16.101646154277402, 16.164690738289534, 16.227735322301667,
        16.2907799063138, 16.35382449032593, 16.416869074338077,
        16.47991365835021, 16.542958242362342, 16.60600282637449,
        16.669047410386623, 16.732091994398755, 16.795136578410902,
        16.858181162423035, 16.921225746435167, 16.984270330447314,
        17.047314914459446, 17.11035949847158, 17.17340408248373,
        17.23644866649586, 17.299493250508013, 17.362537834520143,
        17.42558241853228, 17.488627002544
    ]
    np.testing.assert_almost_equal(
        actual, expected, 7, "Expected different data points in line plot.")
